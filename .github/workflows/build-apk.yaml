name: Build Android APK

on:
  push:

jobs:
  # testing-web:
  #   uses: bynicodevelop/com_nicodevelop_dot_messenger/.github/workflows/tests.yaml@main

  build-apk:
    # needs: [testing-web]
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.7'
          channel: 'stable'

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Clean flutter
        run: flutter clean

      - name: Download pub dependencies
        run: flutter pub get

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Create local.properties
        run: |
          echo "flutter.buildMode=release" > android/local.properties
          echo "flutter.versionName=1.0.0" > android/local.properties
          echo "flutter.versionCode=1" >> android/local.properties
          echo "flutter.minSdkVersion=21" >> android/local.properties
          echo "flutter.targetSdkVersion=30" >> android/local.properties

      - name: Create google-services.json
        id: google_services
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "google-services.json"
          encodedString: ${{ secrets.GOOGLE_SERVICES_PRODUCTION_DEV }}

      - name: Show google-services.json file
        run: |
          mv ${{ steps.google_services.outputs.filePath }} android/app/google-services.json
      
      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: "Clean releases"
        uses: glassechidna/artifact-cleaner@master
        with:
          minimumAge: 86400

      - uses: actions/upload-artifact@v1
        with:
          name: release
          path: build/app/outputs/bundle/release/app-release.aab